<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Expense Tracker Project </title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
  <div class="container">
    <h1 class="mt-5">Expense Tracker</h1>
    <form id="expenseForm">
      <div class="form-group">
        <label for="expenseName">Expense</label>
        <input type="text" class="form-control" id="expenseName" placeholder="Enter expense name">
      </div>
      <div class="form-group">
        <label for="expenseAmount">Spended Amount</label>
        <input type="number" class="form-control" id="expenseAmount" placeholder="Enter amount">
      </div>
      <button type="submit" class="btn btn-primary">Add Expense</button>
    </form>
    <div class="mt-4">
      <h2>Expenses</h2>
      <ul id="expenseList" class="list-group">
        <!-- Expenses will be displayed here -->
      </ul>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
  const expenseForm = document.getElementById('expenseForm');
  const expenseList = document.getElementById('expenseList');

  expenseForm.addEventListener('submit', function(event) {
    event.preventDefault();

    const expenseNameInput = document.getElementById('expenseName');
    const expenseAmountInput = document.getElementById('expenseAmount');

    const expenseName = expenseNameInput.value;
    const expenseAmount = parseFloat(expenseAmountInput.value);

    if (expenseName.trim() === '' || isNaN(expenseAmount) || expenseAmount <= 0) {
      alert('Please enter valid expense details.');
      return;
    }

    addExpense(expenseName, expenseAmount);
    expenseForm.reset();
  });

  function addExpense(name, amount) {
    const li = document.createElement('li');
    li.className = 'list-group-item';
    li.innerHTML = `
      <span>${name}</span>
      <span class="badge badge-primary badge-pill">${amount}</span>
    `;
    expenseList.appendChild(li);

    // Save to local storage
    saveToLocalStorage(name, amount);
  }

  function saveToLocalStorage(name, amount) {
    let expenses = JSON.parse(localStorage.getItem('expenses')) || [];
    expenses.push({ name, amount });
    localStorage.setItem('expenses', JSON.stringify(expenses));
  }

});

  </script>
</body>
</html>
